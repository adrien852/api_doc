{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"API Rest - CRUD For full documentation visit mkdocs.org . Comment installer ? L'API joue le r\u00f4le d'interm\u00e9diaire entre une base de donn\u00e9es c\u00f4t\u00e9 serveur, et une application c\u00f4t\u00e9 client. Vous devez donc disposer d'un serveur et d'une base de donn\u00e9es. Les param\u00e8tres de connexion \u00e0 la BDD se trouvent dans le fichier API_REST/app/db.js . Par d\u00e9faut, nous utilisons une base de donn\u00e9es MySQL sur serveur local (localhost). L'architecture de la base de donn\u00e9es doit respecter un format tr\u00e8s pr\u00e9cis pour \u00eatre lue par l'API. Ci-dessous le d\u00e9tail des tables : utilisateur : id : int, primary, auto-increment nom : varchar(255) prenom : varchar(255) date_naissance : varchar(255) departement_id : int departement : id : int, primary, auto-increment intitule : varchar(255) adresse : varchar(255) Une fois la base de donn\u00e9es configur\u00e9e, t\u00e9l\u00e9chargez et installez node.js via le site officiel : nodejs.org Ouvrez l'invit\u00e9 de commandes Windows et ex\u00e9cutez cette s\u00e9rie de commandes dans le r\u00e9pertoire API_REST : npm init npm install express --save npm install mysql --save npm install body-parser --save node index.js L'API vous signale son d\u00e9marrage ainsi que son port d'\u00e9coute (par d\u00e9faut 8080). Comment utiliser ? Cette API remplit le r\u00f4le d'un annuaire. Celui-ci en particulier remplit les r\u00f4les suivants : Route Verbe HTTP Entr\u00e9e(s) Sortie(s) Accueil / GET Aucune JSON d'un message de bienvenue dans une cl\u00e9 message Afficher tous les utilisateurs /utilisateurs GET Aucune JSON des couples cl\u00e9/valeur des utilisateurs en base de donn\u00e9es pour les cl\u00e9s suivantes : id nom prenom date_naissance departement_id adresse intitule Cr\u00e9er un utilisateur /utilisateurs POST Couples cl\u00e9/valeur via x-www-form-urlencoded pour les cl\u00e9s suivantes : nom prenom date_naissance departement_id JSON de l'id de l'utilisateur ins\u00e9r\u00e9 en base de donn\u00e9es Afficher un utilisateur /utilisateurs/id GET Aucune JSON des couples cl\u00e9/valeur de l'utilisateur dont l'id est celui de la route Modifier un utilisateur /utilisateurs/id PUT Couples cl\u00e9/valeur via x-www-form-urlencoded pour les cl\u00e9s suivantes : nom prenom date_naissance departement_id JSON du succ\u00e8s de la modification en base de donn\u00e9es Supprimer un utilisateur /utilisateurs/id DELETE Aucune JSON du message de confirmation de suppression en base de donn\u00e9es Les diff\u00e9rentes routes sont d\u00e9finies dans le fichier API_REST/app/routes.js . Pour acc\u00e9der \u00e0 une fonctionnalit\u00e9 de l'API, il suffit de formuler la bonne requ\u00eate HTTP avec le bon URL ainsi que les bons param\u00e8tres d'entr\u00e9e (si besoin). L'interface cURL facilite ce requ\u00eatage au sein d'une application. Donnez la mise en forme que vous pr\u00e9f\u00e9rez \u00e0 vos jeux de donn\u00e9es ainsi r\u00e9cup\u00e9r\u00e9es (en PHP par exemple). Il ne reste plus qu'\u00e0 int\u00e9grer cette application sur votre serveur (un exemple est dipsonible dans APP_WEB ). Assurez vous que tous vos serveurs soient lanc\u00e9s (application, base de donn\u00e9es, API).","title":"API Rest - CRUD"},{"location":"#api-rest-crud","text":"For full documentation visit mkdocs.org .","title":"API Rest - CRUD"},{"location":"#comment-installer","text":"L'API joue le r\u00f4le d'interm\u00e9diaire entre une base de donn\u00e9es c\u00f4t\u00e9 serveur, et une application c\u00f4t\u00e9 client. Vous devez donc disposer d'un serveur et d'une base de donn\u00e9es. Les param\u00e8tres de connexion \u00e0 la BDD se trouvent dans le fichier API_REST/app/db.js . Par d\u00e9faut, nous utilisons une base de donn\u00e9es MySQL sur serveur local (localhost). L'architecture de la base de donn\u00e9es doit respecter un format tr\u00e8s pr\u00e9cis pour \u00eatre lue par l'API. Ci-dessous le d\u00e9tail des tables : utilisateur : id : int, primary, auto-increment nom : varchar(255) prenom : varchar(255) date_naissance : varchar(255) departement_id : int departement : id : int, primary, auto-increment intitule : varchar(255) adresse : varchar(255) Une fois la base de donn\u00e9es configur\u00e9e, t\u00e9l\u00e9chargez et installez node.js via le site officiel : nodejs.org Ouvrez l'invit\u00e9 de commandes Windows et ex\u00e9cutez cette s\u00e9rie de commandes dans le r\u00e9pertoire API_REST : npm init npm install express --save npm install mysql --save npm install body-parser --save node index.js L'API vous signale son d\u00e9marrage ainsi que son port d'\u00e9coute (par d\u00e9faut 8080).","title":"Comment installer ?"},{"location":"#comment-utiliser","text":"Cette API remplit le r\u00f4le d'un annuaire. Celui-ci en particulier remplit les r\u00f4les suivants : Route Verbe HTTP Entr\u00e9e(s) Sortie(s) Accueil / GET Aucune JSON d'un message de bienvenue dans une cl\u00e9 message Afficher tous les utilisateurs /utilisateurs GET Aucune JSON des couples cl\u00e9/valeur des utilisateurs en base de donn\u00e9es pour les cl\u00e9s suivantes : id nom prenom date_naissance departement_id adresse intitule Cr\u00e9er un utilisateur /utilisateurs POST Couples cl\u00e9/valeur via x-www-form-urlencoded pour les cl\u00e9s suivantes : nom prenom date_naissance departement_id JSON de l'id de l'utilisateur ins\u00e9r\u00e9 en base de donn\u00e9es Afficher un utilisateur /utilisateurs/id GET Aucune JSON des couples cl\u00e9/valeur de l'utilisateur dont l'id est celui de la route Modifier un utilisateur /utilisateurs/id PUT Couples cl\u00e9/valeur via x-www-form-urlencoded pour les cl\u00e9s suivantes : nom prenom date_naissance departement_id JSON du succ\u00e8s de la modification en base de donn\u00e9es Supprimer un utilisateur /utilisateurs/id DELETE Aucune JSON du message de confirmation de suppression en base de donn\u00e9es Les diff\u00e9rentes routes sont d\u00e9finies dans le fichier API_REST/app/routes.js . Pour acc\u00e9der \u00e0 une fonctionnalit\u00e9 de l'API, il suffit de formuler la bonne requ\u00eate HTTP avec le bon URL ainsi que les bons param\u00e8tres d'entr\u00e9e (si besoin). L'interface cURL facilite ce requ\u00eatage au sein d'une application. Donnez la mise en forme que vous pr\u00e9f\u00e9rez \u00e0 vos jeux de donn\u00e9es ainsi r\u00e9cup\u00e9r\u00e9es (en PHP par exemple). Il ne reste plus qu'\u00e0 int\u00e9grer cette application sur votre serveur (un exemple est dipsonible dans APP_WEB ). Assurez vous que tous vos serveurs soient lanc\u00e9s (application, base de donn\u00e9es, API).","title":"Comment utiliser ?"}]}